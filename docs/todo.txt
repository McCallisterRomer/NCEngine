***********
IN PROGRESS
***********


***********
BUGS
***********
-Component::Initialize() is called after constructor runs meaning handle/entity data
    is not available at the time of constructor invocation
-fix camera controls
-rotations are still strange sometimes(also need world/local options)
-fix window scaling so changes are made to Window, Graphics, and buffer sizes
-don't believe gfx resources are ever unloaded

***********
TO ADD
***********
-add global search to api - GlobalGetComponent
-all d3d "slots" are passed at uint literalts, look into what exactly
    is needed here - can we use an enum for these so there is some 
    semantic meaning tied to the values passed?
-update physics to 3d
-support for multiple cameras
-lights
    -improve point light components and how they relate to entities
    -support for multiple lights
    -additional light types (directional/spot)
-config files
    -enable reading from files again
    -make human readable(xml or with property keys?)
    -additional values: initial scene name

LOW PRIORITY
-unused params are marked (void)param for now, many of these can be removed,
    but some are there for uniformity (ex: Aquire passes gfx* to resource constructor always)
-display draw calls and tris/verts
-fix naming of user components in gui
-main window/main menu dilemma
-meshes are loaded from ObjLoader even if v/i buffers already exist(in Model constructor)
        -note: the 'shared' buffers are ultimately used, but file reading happens for each instance regardless
-camera needs parameters for fov/clipping planes
-Entity (and other places) - many public methods could be private if Engine was friend
-make generating new user types easier/quicker (untility prog?)
-save changes in debug mode
-certain win/dx3d types aren't forward declared(HWND), can they be?

